{"ast":null,"code":"import * as api from \"../../api\";\nimport { openAlertMessage } from \"./alertActions\";\nexport const authActions = {\n  SET_USER_DETAILS: \"AUTH.SET_USER_DETAILS\"\n};\nexport const getActions = dispatch => {\n  return {\n    login: (userDetails, history) => dispatch(login(userDetails, history)),\n    register: (userDetails, history) => dispatch(register(userDetails, history)),\n    setUserDetails: userDetails => dispatch(setUserDetails(userDetails))\n  };\n};\n\nconst setUserDetails = userDetails => {\n  return {\n    type: authActions.SET_USER_DETAILS,\n    userDetails\n  };\n};\n\nconst login = (userDetails, history) => {\n  return async dispatch => {\n    const response = await api.login(userDetails);\n    console.log(response);\n\n    if (response.error) {\n      var _response$exception, _response$exception$r;\n\n      dispatch(openAlertMessage(response === null || response === void 0 ? void 0 : (_response$exception = response.exception) === null || _response$exception === void 0 ? void 0 : (_response$exception$r = _response$exception.response) === null || _response$exception$r === void 0 ? void 0 : _response$exception$r.data));\n    } else {\n      const {\n        userDetails\n      } = response === null || response === void 0 ? void 0 : response.data;\n      localStorage.setItem(\"user\", JSON.stringify(userDetails));\n      dispatch(setUserDetails(userDetails));\n      history.push(\"/dashboard\");\n    }\n  };\n};\n\nconst register = (userDetails, history) => {\n  return async dispatch => {\n    const response = await api.register(userDetails);\n    console.log(response);\n\n    if (response.error) {\n      var _response$exception2, _response$exception2$;\n\n      dispatch(openAlertMessage(response === null || response === void 0 ? void 0 : (_response$exception2 = response.exception) === null || _response$exception2 === void 0 ? void 0 : (_response$exception2$ = _response$exception2.response) === null || _response$exception2$ === void 0 ? void 0 : _response$exception2$.data));\n    } else {\n      const {\n        userDetails\n      } = response === null || response === void 0 ? void 0 : response.data;\n      localStorage.setItem(\"user\", JSON.stringify(userDetails));\n      dispatch(setUserDetails(userDetails));\n      history.push(\"/dashboard\");\n    }\n  };\n};","map":{"version":3,"names":["api","openAlertMessage","authActions","SET_USER_DETAILS","getActions","dispatch","login","userDetails","history","register","setUserDetails","type","response","console","log","error","exception","data","localStorage","setItem","JSON","stringify","push"],"sources":["/Users/youngjun827/dev/discord-app/discord-frontend/src/store/actions/authActions.js"],"sourcesContent":["import * as api from \"../../api\";\r\nimport { openAlertMessage } from \"./alertActions\";\r\n\r\nexport const authActions = {\r\n  SET_USER_DETAILS: \"AUTH.SET_USER_DETAILS\",\r\n};\r\n\r\nexport const getActions = (dispatch) => {\r\n  return {\r\n    login: (userDetails, history) => dispatch(login(userDetails, history)),\r\n    register: (userDetails, history) =>\r\n      dispatch(register(userDetails, history)),\r\n    setUserDetails: (userDetails) => dispatch(setUserDetails(userDetails)),\r\n  };\r\n};\r\n\r\nconst setUserDetails = (userDetails) => {\r\n  return {\r\n    type: authActions.SET_USER_DETAILS,\r\n    userDetails,\r\n  };\r\n};\r\n\r\nconst login = (userDetails, history) => {\r\n  return async (dispatch) => {\r\n    const response = await api.login(userDetails);\r\n    console.log(response);\r\n    if (response.error) {\r\n      dispatch(openAlertMessage(response?.exception?.response?.data));\r\n    } else {\r\n      const { userDetails } = response?.data;\r\n      localStorage.setItem(\"user\", JSON.stringify(userDetails));\r\n\r\n      dispatch(setUserDetails(userDetails));\r\n      history.push(\"/dashboard\");\r\n    }\r\n  };\r\n};\r\n\r\nconst register = (userDetails, history) => {\r\n  return async (dispatch) => {\r\n    const response = await api.register(userDetails);\r\n    console.log(response);\r\n    if (response.error) {\r\n      dispatch(openAlertMessage(response?.exception?.response?.data));\r\n    } else {\r\n      const { userDetails } = response?.data;\r\n      localStorage.setItem(\"user\", JSON.stringify(userDetails));\r\n\r\n      dispatch(setUserDetails(userDetails));\r\n      history.push(\"/dashboard\");\r\n    }\r\n  };\r\n};\r\n"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,WAArB;AACA,SAASC,gBAAT,QAAiC,gBAAjC;AAEA,OAAO,MAAMC,WAAW,GAAG;EACzBC,gBAAgB,EAAE;AADO,CAApB;AAIP,OAAO,MAAMC,UAAU,GAAIC,QAAD,IAAc;EACtC,OAAO;IACLC,KAAK,EAAE,CAACC,WAAD,EAAcC,OAAd,KAA0BH,QAAQ,CAACC,KAAK,CAACC,WAAD,EAAcC,OAAd,CAAN,CADpC;IAELC,QAAQ,EAAE,CAACF,WAAD,EAAcC,OAAd,KACRH,QAAQ,CAACI,QAAQ,CAACF,WAAD,EAAcC,OAAd,CAAT,CAHL;IAILE,cAAc,EAAGH,WAAD,IAAiBF,QAAQ,CAACK,cAAc,CAACH,WAAD,CAAf;EAJpC,CAAP;AAMD,CAPM;;AASP,MAAMG,cAAc,GAAIH,WAAD,IAAiB;EACtC,OAAO;IACLI,IAAI,EAAET,WAAW,CAACC,gBADb;IAELI;EAFK,CAAP;AAID,CALD;;AAOA,MAAMD,KAAK,GAAG,CAACC,WAAD,EAAcC,OAAd,KAA0B;EACtC,OAAO,MAAOH,QAAP,IAAoB;IACzB,MAAMO,QAAQ,GAAG,MAAMZ,GAAG,CAACM,KAAJ,CAAUC,WAAV,CAAvB;IACAM,OAAO,CAACC,GAAR,CAAYF,QAAZ;;IACA,IAAIA,QAAQ,CAACG,KAAb,EAAoB;MAAA;;MAClBV,QAAQ,CAACJ,gBAAgB,CAACW,QAAD,aAACA,QAAD,8CAACA,QAAQ,CAAEI,SAAX,iFAAC,oBAAqBJ,QAAtB,0DAAC,sBAA+BK,IAAhC,CAAjB,CAAR;IACD,CAFD,MAEO;MACL,MAAM;QAAEV;MAAF,IAAkBK,QAAlB,aAAkBA,QAAlB,uBAAkBA,QAAQ,CAAEK,IAAlC;MACAC,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAed,WAAf,CAA7B;MAEAF,QAAQ,CAACK,cAAc,CAACH,WAAD,CAAf,CAAR;MACAC,OAAO,CAACc,IAAR,CAAa,YAAb;IACD;EACF,CAZD;AAaD,CAdD;;AAgBA,MAAMb,QAAQ,GAAG,CAACF,WAAD,EAAcC,OAAd,KAA0B;EACzC,OAAO,MAAOH,QAAP,IAAoB;IACzB,MAAMO,QAAQ,GAAG,MAAMZ,GAAG,CAACS,QAAJ,CAAaF,WAAb,CAAvB;IACAM,OAAO,CAACC,GAAR,CAAYF,QAAZ;;IACA,IAAIA,QAAQ,CAACG,KAAb,EAAoB;MAAA;;MAClBV,QAAQ,CAACJ,gBAAgB,CAACW,QAAD,aAACA,QAAD,+CAACA,QAAQ,CAAEI,SAAX,kFAAC,qBAAqBJ,QAAtB,0DAAC,sBAA+BK,IAAhC,CAAjB,CAAR;IACD,CAFD,MAEO;MACL,MAAM;QAAEV;MAAF,IAAkBK,QAAlB,aAAkBA,QAAlB,uBAAkBA,QAAQ,CAAEK,IAAlC;MACAC,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAed,WAAf,CAA7B;MAEAF,QAAQ,CAACK,cAAc,CAACH,WAAD,CAAf,CAAR;MACAC,OAAO,CAACc,IAAR,CAAa,YAAb;IACD;EACF,CAZD;AAaD,CAdD"},"metadata":{},"sourceType":"module"}