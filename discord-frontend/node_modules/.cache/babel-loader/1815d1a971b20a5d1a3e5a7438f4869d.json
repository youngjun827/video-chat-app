{"ast":null,"code":"import _regeneratorRuntime from\"/Users/youngjun827/dev/discord-app/discord-frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/youngjun827/dev/discord-app/discord-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import React,{useState}from\"react\";import IconButton from\"@mui/material/IconButton\";import ScreenShareIcon from\"@mui/icons-material/ScreenShare\";import StopScreenShareIcon from\"@mui/icons-material/StopScreenShare\";import*as webRTCHandler from\"../../../realtimeCommunication/webRTCHandler\";import{jsx as _jsx}from\"react/jsx-runtime\";var constraints={audio:false,video:true};var ScreenShareButton=function ScreenShareButton(_ref){var localStream=_ref.localStream,screenSharingStream=_ref.screenSharingStream,setScreenSharingStream=_ref.setScreenSharingStream,isScreenSharingActive=_ref.isScreenSharingActive;var handleScreenShareToggle=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var stream;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(isScreenSharingActive){_context.next=14;break;}stream=null;_context.prev=2;_context.next=5;return navigator.mediaDevices.getDisplayMedia(constraints);case 5:stream=_context.sent;_context.next=11;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](2);console.log(\"error occured when trying to get an access to screen share stream\");case 11:if(stream){setScreenSharingStream(stream);webRTCHandler.switchOutgoingTracks(stream);}_context.next=17;break;case 14:webRTCHandler.switchOutgoingTracks(localStream);screenSharingStream.getTracks().forEach(function(t){return t.stop();});setScreenSharingStream(null);case 17:case\"end\":return _context.stop();}}},_callee,null,[[2,8]]);}));return function handleScreenShareToggle(){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/_jsx(IconButton,{onClick:handleScreenShareToggle,style:{color:\"white\"},children:isScreenSharingActive?/*#__PURE__*/_jsx(StopScreenShareIcon,{}):/*#__PURE__*/_jsx(ScreenShareIcon,{})});};export default ScreenShareButton;","map":{"version":3,"names":["React","useState","IconButton","ScreenShareIcon","StopScreenShareIcon","webRTCHandler","constraints","audio","video","ScreenShareButton","localStream","screenSharingStream","setScreenSharingStream","isScreenSharingActive","handleScreenShareToggle","stream","navigator","mediaDevices","getDisplayMedia","console","log","switchOutgoingTracks","getTracks","forEach","t","stop","color"],"sources":["/Users/youngjun827/dev/discord-app/discord-frontend/src/Dashboard/Room/RoomButtons/ScreenShareButton.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport ScreenShareIcon from \"@mui/icons-material/ScreenShare\";\r\nimport StopScreenShareIcon from \"@mui/icons-material/StopScreenShare\";\r\nimport * as webRTCHandler from \"../../../realtimeCommunication/webRTCHandler\";\r\n\r\nconst constraints = {\r\n  audio: false,\r\n  video: true,\r\n};\r\n\r\nconst ScreenShareButton = ({\r\n  localStream,\r\n  screenSharingStream,\r\n  setScreenSharingStream,\r\n  isScreenSharingActive,\r\n}) => {\r\n  const handleScreenShareToggle = async () => {\r\n    if (!isScreenSharingActive) {\r\n      let stream = null;\r\n      try {\r\n        stream = await navigator.mediaDevices.getDisplayMedia(constraints);\r\n      } catch (err) {\r\n        console.log(\r\n          \"error occured when trying to get an access to screen share stream\"\r\n        );\r\n      }\r\n\r\n      if (stream) {\r\n        setScreenSharingStream(stream);\r\n        webRTCHandler.switchOutgoingTracks(stream);\r\n      }\r\n    } else {\r\n      webRTCHandler.switchOutgoingTracks(localStream);\r\n      screenSharingStream.getTracks().forEach((t) => t.stop());\r\n      setScreenSharingStream(null);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <IconButton onClick={handleScreenShareToggle} style={{ color: \"white\" }}>\r\n      {isScreenSharingActive ? <StopScreenShareIcon /> : <ScreenShareIcon />}\r\n    </IconButton>\r\n  );\r\n};\r\n\r\nexport default ScreenShareButton;\r\n"],"mappings":"kSAAA,MAAOA,MAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,WAAP,KAAuB,0BAAvB,CACA,MAAOC,gBAAP,KAA4B,iCAA5B,CACA,MAAOC,oBAAP,KAAgC,qCAAhC,CACA,MAAO,GAAKC,cAAZ,KAA+B,8CAA/B,C,2CAEA,GAAMC,YAAW,CAAG,CAClBC,KAAK,CAAE,KADW,CAElBC,KAAK,CAAE,IAFW,CAApB,CAKA,GAAMC,kBAAiB,CAAG,QAApBA,kBAAoB,MAKpB,IAJJC,YAII,MAJJA,WAII,CAHJC,mBAGI,MAHJA,mBAGI,CAFJC,sBAEI,MAFJA,sBAEI,CADJC,qBACI,MADJA,qBACI,CACJ,GAAMC,wBAAuB,6FAAG,mJACzBD,qBADyB,0BAExBE,MAFwB,CAEf,IAFe,uCAIXC,UAAS,CAACC,YAAV,CAAuBC,eAAvB,CAAuCZ,WAAvC,CAJW,QAI1BS,MAJ0B,8FAM1BI,OAAO,CAACC,GAAR,CACE,mEADF,EAN0B,QAW5B,GAAIL,MAAJ,CAAY,CACVH,sBAAsB,CAACG,MAAD,CAAtB,CACAV,aAAa,CAACgB,oBAAd,CAAmCN,MAAnC,EACD,CAd2B,+BAgB5BV,aAAa,CAACgB,oBAAd,CAAmCX,WAAnC,EACAC,mBAAmB,CAACW,SAApB,GAAgCC,OAAhC,CAAwC,SAACC,CAAD,QAAOA,EAAC,CAACC,IAAF,EAAP,EAAxC,EACAb,sBAAsB,CAAC,IAAD,CAAtB,CAlB4B,oEAAH,kBAAvBE,wBAAuB,2CAA7B,CAsBA,mBACE,KAAC,UAAD,EAAY,OAAO,CAAEA,uBAArB,CAA8C,KAAK,CAAE,CAAEY,KAAK,CAAE,OAAT,CAArD,UACGb,qBAAqB,cAAG,KAAC,mBAAD,IAAH,cAA6B,KAAC,eAAD,IADrD,EADF,CAKD,CAjCD,CAmCA,cAAeJ,kBAAf"},"metadata":{},"sourceType":"module"}