{"ast":null,"code":"import store from \"../../store/store\";\nimport { setMessages } from \"../../store/actions/chatActions\";\nexport const updateDirectChatHistoryIfActive = data => {\n  var _store$getState$chat$;\n\n  const {\n    participants,\n    messages\n  } = data; // find id of user from token and id from active conversation\n\n  const receiverId = (_store$getState$chat$ = store.getState().chat.chosenChatDetails) === null || _store$getState$chat$ === void 0 ? void 0 : _store$getState$chat$.id;\n\n  const userId = store.getState().auth.userDetails._id;\n\n  if (receiverId && userId) {\n    const usersInCoversation = [receiverId, userId];\n    updateChatHistoryIfSameConversationActive({\n      participants,\n      usersInCoversation,\n      messages\n    });\n  }\n};\n\nconst updateChatHistoryIfSameConversationActive = _ref => {\n  let {\n    participants,\n    usersInCoversation,\n    messages\n  } = _ref;\n  const result = participants.every(function (participantId) {\n    return usersInCoversation.includes(participantId);\n  });\n\n  if (result) {\n    store.dispatch(setMessages(messages));\n  }\n};","map":{"version":3,"names":["store","setMessages","updateDirectChatHistoryIfActive","data","participants","messages","receiverId","getState","chat","chosenChatDetails","id","userId","auth","userDetails","_id","usersInCoversation","updateChatHistoryIfSameConversationActive","result","every","participantId","includes","dispatch"],"sources":["/Users/youngjun827/Downloads/Video Chat App - Learn MERN Stack with WebRTC and SocketIO/[TutsNode.com] - Video Chat App - Learn MERN Stack with WebRTC and SocketIO/8. Creating Video Group Call Rooms/discord-app/discord-frontend/src/shared/utils/chat.js"],"sourcesContent":["import store from \"../../store/store\";\r\nimport { setMessages } from \"../../store/actions/chatActions\";\r\n\r\nexport const updateDirectChatHistoryIfActive = (data) => {\r\n  const { participants, messages } = data;\r\n\r\n  // find id of user from token and id from active conversation\r\n  const receiverId = store.getState().chat.chosenChatDetails?.id;\r\n  const userId = store.getState().auth.userDetails._id;\r\n\r\n  if (receiverId && userId) {\r\n    const usersInCoversation = [receiverId, userId];\r\n\r\n    updateChatHistoryIfSameConversationActive({\r\n      participants,\r\n      usersInCoversation,\r\n      messages,\r\n    });\r\n  }\r\n};\r\n\r\nconst updateChatHistoryIfSameConversationActive = ({\r\n  participants,\r\n  usersInCoversation,\r\n  messages,\r\n}) => {\r\n  const result = participants.every(function (participantId) {\r\n    return usersInCoversation.includes(participantId);\r\n  });\r\n\r\n  if (result) {\r\n    store.dispatch(setMessages(messages));\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,mBAAlB;AACA,SAASC,WAAT,QAA4B,iCAA5B;AAEA,OAAO,MAAMC,+BAA+B,GAAIC,IAAD,IAAU;EAAA;;EACvD,MAAM;IAAEC,YAAF;IAAgBC;EAAhB,IAA6BF,IAAnC,CADuD,CAGvD;;EACA,MAAMG,UAAU,4BAAGN,KAAK,CAACO,QAAN,GAAiBC,IAAjB,CAAsBC,iBAAzB,0DAAG,sBAAyCC,EAA5D;;EACA,MAAMC,MAAM,GAAGX,KAAK,CAACO,QAAN,GAAiBK,IAAjB,CAAsBC,WAAtB,CAAkCC,GAAjD;;EAEA,IAAIR,UAAU,IAAIK,MAAlB,EAA0B;IACxB,MAAMI,kBAAkB,GAAG,CAACT,UAAD,EAAaK,MAAb,CAA3B;IAEAK,yCAAyC,CAAC;MACxCZ,YADwC;MAExCW,kBAFwC;MAGxCV;IAHwC,CAAD,CAAzC;EAKD;AACF,CAhBM;;AAkBP,MAAMW,yCAAyC,GAAG,QAI5C;EAAA,IAJ6C;IACjDZ,YADiD;IAEjDW,kBAFiD;IAGjDV;EAHiD,CAI7C;EACJ,MAAMY,MAAM,GAAGb,YAAY,CAACc,KAAb,CAAmB,UAAUC,aAAV,EAAyB;IACzD,OAAOJ,kBAAkB,CAACK,QAAnB,CAA4BD,aAA5B,CAAP;EACD,CAFc,CAAf;;EAIA,IAAIF,MAAJ,EAAY;IACVjB,KAAK,CAACqB,QAAN,CAAepB,WAAW,CAACI,QAAD,CAA1B;EACD;AACF,CAZD"},"metadata":{},"sourceType":"module"}