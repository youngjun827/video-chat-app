{"ast":null,"code":"import { authActions } from \"../actions/authActions\";\nconst initState = {\n  userDetails: null\n};\n\nconst reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    // 22. If the state authAction sent matches with the case written below. the UPDATED state will be returned to the login Function.\n    case authActions.SET_USER_DETAILS:\n      return { ...state,\n        userDetails: action.userDetails\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"names":["authActions","initState","userDetails","reducer","state","action","type","SET_USER_DETAILS"],"sources":["/Users/youngjun827/dev/discord-app/discord-frontend/src/store/reducers/authReducer.js"],"sourcesContent":["import { authActions } from \"../actions/authActions\";\r\n\r\nconst initState = {\r\n  userDetails: null,\r\n};\r\n\r\nconst reducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    // 22. If the state authAction sent matches with the case written below. the UPDATED state will be returned to the login Function.\r\n    case authActions.SET_USER_DETAILS:\r\n      return {\r\n        ...state,\r\n        userDetails: action.userDetails,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,wBAA5B;AAEA,MAAMC,SAAS,GAAG;EAChBC,WAAW,EAAE;AADG,CAAlB;;AAIA,MAAMC,OAAO,GAAG,YAA+B;EAAA,IAA9BC,KAA8B,uEAAtBH,SAAsB;EAAA,IAAXI,MAAW;;EAC7C,QAAQA,MAAM,CAACC,IAAf;IACE;IACA,KAAKN,WAAW,CAACO,gBAAjB;MACE,OAAO,EACL,GAAGH,KADE;QAELF,WAAW,EAAEG,MAAM,CAACH;MAFf,CAAP;;IAIF;MACE,OAAOE,KAAP;EARJ;AAUD,CAXD;;AAaA,eAAeD,OAAf"},"metadata":{},"sourceType":"module"}