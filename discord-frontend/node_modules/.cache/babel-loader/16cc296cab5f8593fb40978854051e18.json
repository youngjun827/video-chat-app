{"ast":null,"code":"import _objectSpread from\"/Users/youngjun827/dev/discord-app/discord-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import store from\"../store/store\";import{setOpenRoom,setRoomDetails,setActiveRooms,setLocalStream,setRemoteStreams,setScreenSharingStream,setIsUserJoinedOnlyWithAudio}from\"../store/actions/roomActions\";import*as socketConnection from\"./socketConnection\";import*as webRTCHandler from\"./webRTCHandler\";export var createNewRoom=function createNewRoom(){var successCalbackFunc=function successCalbackFunc(){store.dispatch(setOpenRoom(true,true));var audioOnly=store.getState().room.audioOnly;store.dispatch(setIsUserJoinedOnlyWithAudio(audioOnly));socketConnection.createNewRoom();};var audioOnly=store.getState().room.audioOnly;webRTCHandler.getLocalStreamPreview(audioOnly,successCalbackFunc);};export var newRoomCreated=function newRoomCreated(data){var roomDetails=data.roomDetails;store.dispatch(setRoomDetails(roomDetails));};export var updateActiveRooms=function updateActiveRooms(data){var _store$getState$auth$;var activeRooms=data.activeRooms;var friends=store.getState().friends.friends;var rooms=[];var userId=(_store$getState$auth$=store.getState().auth.userDetails)===null||_store$getState$auth$===void 0?void 0:_store$getState$auth$._id;activeRooms.forEach(function(room){var isRoomCreatedByMe=room.roomCreator.userId===userId;if(isRoomCreatedByMe){rooms.push(_objectSpread(_objectSpread({},room),{},{creatorUsername:\"Me\"}));}else{friends.forEach(function(f){if(f.id===room.roomCreator.userId){rooms.push(_objectSpread(_objectSpread({},room),{},{creatorUsername:f.username}));}});}});store.dispatch(setActiveRooms(rooms));};export var joinRoom=function joinRoom(roomId){var successCalbackFunc=function successCalbackFunc(){store.dispatch(setRoomDetails({roomId:roomId}));store.dispatch(setOpenRoom(false,true));var audioOnly=store.getState().room.audioOnly;store.dispatch(setIsUserJoinedOnlyWithAudio(audioOnly));socketConnection.joinRoom({roomId:roomId});};var audioOnly=store.getState().room.audioOnly;webRTCHandler.getLocalStreamPreview(audioOnly,successCalbackFunc);};export var leaveRoom=function leaveRoom(){var roomId=store.getState().room.roomDetails.roomId;var localStream=store.getState().room.localStream;if(localStream){localStream.getTracks().forEach(function(track){return track.stop();});store.dispatch(setLocalStream(null));}var screenSharingStream=store.getState().room.screenSharingStream;if(screenSharingStream){screenSharingStream.getTracks().forEach(function(track){return track.stop();});store.dispatch(setScreenSharingStream(null));}store.dispatch(setRemoteStreams([]));webRTCHandler.closeAllConnections();socketConnection.leaveRoom({roomId:roomId});store.dispatch(setRoomDetails(null));store.dispatch(setOpenRoom(false,false));};","map":{"version":3,"names":["store","setOpenRoom","setRoomDetails","setActiveRooms","setLocalStream","setRemoteStreams","setScreenSharingStream","setIsUserJoinedOnlyWithAudio","socketConnection","webRTCHandler","createNewRoom","successCalbackFunc","dispatch","audioOnly","getState","room","getLocalStreamPreview","newRoomCreated","data","roomDetails","updateActiveRooms","activeRooms","friends","rooms","userId","auth","userDetails","_id","forEach","isRoomCreatedByMe","roomCreator","push","creatorUsername","f","id","username","joinRoom","roomId","leaveRoom","localStream","getTracks","track","stop","screenSharingStream","closeAllConnections"],"sources":["/Users/youngjun827/dev/discord-app/discord-frontend/src/realtimeCommunication/roomHandler.js"],"sourcesContent":["import store from \"../store/store\";\r\nimport {\r\n  setOpenRoom,\r\n  setRoomDetails,\r\n  setActiveRooms,\r\n  setLocalStream,\r\n  setRemoteStreams,\r\n  setScreenSharingStream,\r\n  setIsUserJoinedOnlyWithAudio,\r\n} from \"../store/actions/roomActions\";\r\nimport * as socketConnection from \"./socketConnection\";\r\nimport * as webRTCHandler from \"./webRTCHandler\";\r\n\r\nexport const createNewRoom = () => {\r\n  const successCalbackFunc = () => {\r\n    store.dispatch(setOpenRoom(true, true));\r\n\r\n    const audioOnly = store.getState().room.audioOnly;\r\n    store.dispatch(setIsUserJoinedOnlyWithAudio(audioOnly));\r\n    socketConnection.createNewRoom();\r\n  };\r\n\r\n  const audioOnly = store.getState().room.audioOnly;\r\n  webRTCHandler.getLocalStreamPreview(audioOnly, successCalbackFunc);\r\n};\r\n\r\nexport const newRoomCreated = (data) => {\r\n  const { roomDetails } = data;\r\n  store.dispatch(setRoomDetails(roomDetails));\r\n};\r\n\r\nexport const updateActiveRooms = (data) => {\r\n  const { activeRooms } = data;\r\n\r\n  const friends = store.getState().friends.friends;\r\n  const rooms = [];\r\n\r\n  const userId = store.getState().auth.userDetails?._id;\r\n\r\n  activeRooms.forEach((room) => {\r\n    const isRoomCreatedByMe = room.roomCreator.userId === userId;\r\n\r\n    if (isRoomCreatedByMe) {\r\n      rooms.push({ ...room, creatorUsername: \"Me\" });\r\n    } else {\r\n      friends.forEach((f) => {\r\n        if (f.id === room.roomCreator.userId) {\r\n          rooms.push({ ...room, creatorUsername: f.username });\r\n        }\r\n      });\r\n    }\r\n  });\r\n\r\n  store.dispatch(setActiveRooms(rooms));\r\n};\r\n\r\nexport const joinRoom = (roomId) => {\r\n  const successCalbackFunc = () => {\r\n    store.dispatch(setRoomDetails({ roomId }));\r\n    store.dispatch(setOpenRoom(false, true));\r\n    const audioOnly = store.getState().room.audioOnly;\r\n    store.dispatch(setIsUserJoinedOnlyWithAudio(audioOnly));\r\n    socketConnection.joinRoom({ roomId });\r\n  };\r\n\r\n  const audioOnly = store.getState().room.audioOnly;\r\n  webRTCHandler.getLocalStreamPreview(audioOnly, successCalbackFunc);\r\n};\r\n\r\nexport const leaveRoom = () => {\r\n  const roomId = store.getState().room.roomDetails.roomId;\r\n\r\n  const localStream = store.getState().room.localStream;\r\n  if (localStream) {\r\n    localStream.getTracks().forEach((track) => track.stop());\r\n    store.dispatch(setLocalStream(null));\r\n  }\r\n\r\n  const screenSharingStream = store.getState().room.screenSharingStream;\r\n  if (screenSharingStream) {\r\n    screenSharingStream.getTracks().forEach((track) => track.stop());\r\n    store.dispatch(setScreenSharingStream(null));\r\n  }\r\n\r\n  store.dispatch(setRemoteStreams([]));\r\n  webRTCHandler.closeAllConnections();\r\n\r\n  socketConnection.leaveRoom({ roomId });\r\n  store.dispatch(setRoomDetails(null));\r\n  store.dispatch(setOpenRoom(false, false));\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}