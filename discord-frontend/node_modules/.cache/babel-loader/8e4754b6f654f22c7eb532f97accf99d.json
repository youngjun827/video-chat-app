{"ast":null,"code":"import io from \"socket.io-client\";\nimport { setPendingFriendsInvitations, setFriends, setOnlineUsers } from \"../store/actions/friendsActions\";\nimport store from \"../store/store\";\nimport { updateDirectChatHistoryIfActive } from \"../shared/utils/chat\";\nimport * as roomHandler from \"./roomHandler\";\nimport * as webRTCHandler from \"./webRTCHandler\";\nlet socket = null;\nexport const connectWithSocketServer = userDetails => {\n  const jwtToken = userDetails.token;\n  socket = io(\"http://localhost:5002\", {\n    auth: {\n      token: jwtToken\n    }\n  });\n  socket.on(\"connect\", () => {\n    console.log(\"succesfully connected with socket.io server\");\n    console.log(socket.id);\n  });\n  socket.on(\"friends-invitations\", data => {\n    const {\n      pendingInvitations\n    } = data;\n    store.dispatch(setPendingFriendsInvitations(pendingInvitations));\n  });\n  socket.on(\"friends-list\", data => {\n    const {\n      friends\n    } = data;\n    store.dispatch(setFriends(friends));\n  });\n  socket.on(\"online-users\", data => {\n    const {\n      onlineUsers\n    } = data;\n    store.dispatch(setOnlineUsers(onlineUsers));\n  });\n  socket.on(\"direct-chat-history\", data => {\n    console.log(data);\n    updateDirectChatHistoryIfActive(data);\n  });\n  socket.on(\"room-create\", data => {\n    roomHandler.newRoomCreated(data);\n  });\n  socket.on(\"active-rooms\", data => {\n    roomHandler.updateActiveRooms(data);\n  });\n  socket.on(\"conn-prepare\", data => {\n    const {\n      connUserSocketId\n    } = data;\n    webRTCHandler.prepareNewPeerConnection(connUserSocketId, false);\n    socket.emit(\"conn-init\", {\n      connUserSocketId: connUserSocketId\n    });\n  });\n  socket.on(\"conn-init\", data => {\n    const {\n      connUserSocketId\n    } = data;\n    webRTCHandler.prepareNewPeerConnection(connUserSocketId, true);\n  });\n  socket.on(\"conn-signal\", data => {\n    webRTCHandler.handleSignalingData(data);\n  });\n  socket.on(\"room-participant-left\", data => {\n    console.log(\"user left room\");\n    webRTCHandler.handleParticipantLeftRoom(data);\n  });\n};\nexport const sendDirectMessage = data => {\n  console.log(data);\n  socket.emit(\"direct-message\", data);\n};\nexport const getDirectChatHistory = data => {\n  socket.emit(\"direct-chat-history\", data);\n};\nexport const createNewRoom = () => {\n  socket.emit(\"room-create\");\n};\nexport const joinRoom = data => {\n  socket.emit(\"room-join\", data);\n};\nexport const leaveRoom = data => {\n  socket.emit(\"room-leave\", data);\n};\nexport const signalPeerData = data => {\n  socket.emit(\"conn-signal\", data);\n};","map":{"version":3,"names":["io","setPendingFriendsInvitations","setFriends","setOnlineUsers","store","updateDirectChatHistoryIfActive","roomHandler","webRTCHandler","socket","connectWithSocketServer","userDetails","jwtToken","token","auth","on","console","log","id","data","pendingInvitations","dispatch","friends","onlineUsers","newRoomCreated","updateActiveRooms","connUserSocketId","prepareNewPeerConnection","emit","handleSignalingData","handleParticipantLeftRoom","sendDirectMessage","getDirectChatHistory","createNewRoom","joinRoom","leaveRoom","signalPeerData"],"sources":["/Users/youngjun827/dev/discord-app/discord-frontend/src/realtimeCommunication/socketConnection.js"],"sourcesContent":["import io from \"socket.io-client\";\r\nimport {\r\n  setPendingFriendsInvitations,\r\n  setFriends,\r\n  setOnlineUsers,\r\n} from \"../store/actions/friendsActions\";\r\nimport store from \"../store/store\";\r\nimport { updateDirectChatHistoryIfActive } from \"../shared/utils/chat\";\r\nimport * as roomHandler from \"./roomHandler\";\r\nimport * as webRTCHandler from \"./webRTCHandler\";\r\n\r\nlet socket = null;\r\n\r\nexport const connectWithSocketServer = (userDetails) => {\r\n  const jwtToken = userDetails.token;\r\n\r\n  socket = io(\"http://localhost:5002\", {\r\n    auth: {\r\n      token: jwtToken,\r\n    },\r\n  });\r\n\r\n  socket.on(\"connect\", () => {\r\n    console.log(\"succesfully connected with socket.io server\");\r\n    console.log(socket.id);\r\n  });\r\n\r\n  socket.on(\"friends-invitations\", (data) => {\r\n    const { pendingInvitations } = data;\r\n    store.dispatch(setPendingFriendsInvitations(pendingInvitations));\r\n  });\r\n\r\n  socket.on(\"friends-list\", (data) => {\r\n    const { friends } = data;\r\n    store.dispatch(setFriends(friends));\r\n  });\r\n\r\n  socket.on(\"online-users\", (data) => {\r\n    const { onlineUsers } = data;\r\n    store.dispatch(setOnlineUsers(onlineUsers));\r\n  });\r\n\r\n  socket.on(\"direct-chat-history\", (data) => {\r\n    console.log(data);\r\n    updateDirectChatHistoryIfActive(data);\r\n  });\r\n\r\n  socket.on(\"room-create\", (data) => {\r\n    roomHandler.newRoomCreated(data);\r\n  });\r\n\r\n  socket.on(\"active-rooms\", (data) => {\r\n    roomHandler.updateActiveRooms(data);\r\n  });\r\n\r\n  socket.on(\"conn-prepare\", (data) => {\r\n    const { connUserSocketId } = data;\r\n    webRTCHandler.prepareNewPeerConnection(connUserSocketId, false);\r\n    socket.emit(\"conn-init\", { connUserSocketId: connUserSocketId });\r\n  });\r\n\r\n  socket.on(\"conn-init\", (data) => {\r\n    const { connUserSocketId } = data;\r\n    webRTCHandler.prepareNewPeerConnection(connUserSocketId, true);\r\n  });\r\n\r\n  socket.on(\"conn-signal\", (data) => {\r\n    webRTCHandler.handleSignalingData(data);\r\n  });\r\n\r\n  socket.on(\"room-participant-left\", (data) => {\r\n    console.log(\"user left room\");\r\n    webRTCHandler.handleParticipantLeftRoom(data);\r\n  });\r\n};\r\n\r\nexport const sendDirectMessage = (data) => {\r\n  console.log(data);\r\n  socket.emit(\"direct-message\", data);\r\n};\r\n\r\nexport const getDirectChatHistory = (data) => {\r\n  socket.emit(\"direct-chat-history\", data);\r\n};\r\n\r\nexport const createNewRoom = () => {\r\n  socket.emit(\"room-create\");\r\n};\r\n\r\nexport const joinRoom = (data) => {\r\n  socket.emit(\"room-join\", data);\r\n};\r\n\r\nexport const leaveRoom = (data) => {\r\n  socket.emit(\"room-leave\", data);\r\n};\r\n\r\nexport const signalPeerData = (data) => {\r\n  socket.emit(\"conn-signal\", data);\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}