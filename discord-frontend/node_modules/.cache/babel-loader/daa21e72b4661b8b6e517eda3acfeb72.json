{"ast":null,"code":"import store from\"../../store/store\";import{setMessages}from\"../../store/actions/chatActions\";export var updateDirectChatHistoryIfActive=function updateDirectChatHistoryIfActive(data){var _store$getState$chat$;var participants=data.participants,messages=data.messages;// find id of user from token and id from active conversation\nvar receiverId=(_store$getState$chat$=store.getState().chat.chosenChatDetails)===null||_store$getState$chat$===void 0?void 0:_store$getState$chat$.id;var userId=store.getState().auth.userDetails._id;if(receiverId&&userId){var usersInCoversation=[receiverId,userId];updateChatHistoryIfSameConversationActive({participants:participants,usersInCoversation:usersInCoversation,messages:messages});}};var updateChatHistoryIfSameConversationActive=function updateChatHistoryIfSameConversationActive(_ref){var participants=_ref.participants,usersInCoversation=_ref.usersInCoversation,messages=_ref.messages;var result=participants.every(function(participantId){return usersInCoversation.includes(participantId);});if(result){store.dispatch(setMessages(messages));}};","map":{"version":3,"names":["store","setMessages","updateDirectChatHistoryIfActive","data","participants","messages","receiverId","getState","chat","chosenChatDetails","id","userId","auth","userDetails","_id","usersInCoversation","updateChatHistoryIfSameConversationActive","result","every","participantId","includes","dispatch"],"sources":["/Users/youngjun827/dev/discord-app/discord-frontend/src/shared/utils/chat.js"],"sourcesContent":["import store from \"../../store/store\";\r\nimport { setMessages } from \"../../store/actions/chatActions\";\r\n\r\nexport const updateDirectChatHistoryIfActive = (data) => {\r\n  const { participants, messages } = data;\r\n\r\n  // find id of user from token and id from active conversation\r\n  const receiverId = store.getState().chat.chosenChatDetails?.id;\r\n  const userId = store.getState().auth.userDetails._id;\r\n\r\n  if (receiverId && userId) {\r\n    const usersInCoversation = [receiverId, userId];\r\n\r\n    updateChatHistoryIfSameConversationActive({\r\n      participants,\r\n      usersInCoversation,\r\n      messages,\r\n    });\r\n  }\r\n};\r\n\r\nconst updateChatHistoryIfSameConversationActive = ({\r\n  participants,\r\n  usersInCoversation,\r\n  messages,\r\n}) => {\r\n  const result = participants.every(function (participantId) {\r\n    return usersInCoversation.includes(participantId);\r\n  });\r\n\r\n  if (result) {\r\n    store.dispatch(setMessages(messages));\r\n  }\r\n};\r\n"],"mappings":"AAAA,MAAOA,MAAP,KAAkB,mBAAlB,CACA,OAASC,WAAT,KAA4B,iCAA5B,CAEA,MAAO,IAAMC,gCAA+B,CAAG,QAAlCA,gCAAkC,CAACC,IAAD,CAAU,2BACvD,GAAQC,aAAR,CAAmCD,IAAnC,CAAQC,YAAR,CAAsBC,QAAtB,CAAmCF,IAAnC,CAAsBE,QAAtB,CAEA;AACA,GAAMC,WAAU,wBAAGN,KAAK,CAACO,QAAN,GAAiBC,IAAjB,CAAsBC,iBAAzB,gDAAG,sBAAyCC,EAA5D,CACA,GAAMC,OAAM,CAAGX,KAAK,CAACO,QAAN,GAAiBK,IAAjB,CAAsBC,WAAtB,CAAkCC,GAAjD,CAEA,GAAIR,UAAU,EAAIK,MAAlB,CAA0B,CACxB,GAAMI,mBAAkB,CAAG,CAACT,UAAD,CAAaK,MAAb,CAA3B,CAEAK,yCAAyC,CAAC,CACxCZ,YAAY,CAAZA,YADwC,CAExCW,kBAAkB,CAAlBA,kBAFwC,CAGxCV,QAAQ,CAARA,QAHwC,CAAD,CAAzC,CAKD,CACF,CAhBM,CAkBP,GAAMW,0CAAyC,CAAG,QAA5CA,0CAA4C,MAI5C,IAHJZ,aAGI,MAHJA,YAGI,CAFJW,kBAEI,MAFJA,kBAEI,CADJV,QACI,MADJA,QACI,CACJ,GAAMY,OAAM,CAAGb,YAAY,CAACc,KAAb,CAAmB,SAAUC,aAAV,CAAyB,CACzD,MAAOJ,mBAAkB,CAACK,QAAnB,CAA4BD,aAA5B,CAAP,CACD,CAFc,CAAf,CAIA,GAAIF,MAAJ,CAAY,CACVjB,KAAK,CAACqB,QAAN,CAAepB,WAAW,CAACI,QAAD,CAA1B,EACD,CACF,CAZD"},"metadata":{},"sourceType":"module"}