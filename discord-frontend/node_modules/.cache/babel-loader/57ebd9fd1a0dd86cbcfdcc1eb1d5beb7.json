{"ast":null,"code":"var _jsxFileName = \"/Users/youngjun827/dev/discord-app/discord-frontend/src/Dashboard/Room/RoomButtons/ScreenShareButton.js\";\nimport React, { useState } from \"react\";\nimport IconButton from \"@mui/material/IconButton\";\nimport ScreenShareIcon from \"@mui/icons-material/ScreenShare\";\nimport StopScreenShareIcon from \"@mui/icons-material/StopScreenShare\";\nimport * as webRTCHandler from \"../../../realtimeCommunication/webRTCHandler\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst constraints = {\n  audio: false,\n  video: true\n};\n\nconst ScreenShareButton = _ref => {\n  let {\n    localStream,\n    screenSharingStream,\n    setScreenSharingStream,\n    isScreenSharingActive\n  } = _ref;\n\n  const handleScreenShareToggle = async () => {\n    if (!isScreenSharingActive) {\n      let stream = null;\n\n      try {\n        stream = await navigator.mediaDevices.getDisplayMedia(constraints);\n      } catch (err) {\n        console.log(\"error occured when trying to get an access to screen share stream\");\n      }\n\n      if (stream) {\n        setScreenSharingStream(stream);\n        webRTCHandler.switchOutgoingTracks(stream);\n      }\n    } else {\n      webRTCHandler.switchOutgoingTracks(localStream);\n      screenSharingStream.getTracks().forEach(t => t.stop());\n      setScreenSharingStream(null);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(IconButton, {\n    onClick: handleScreenShareToggle,\n    style: {\n      color: \"white\"\n    },\n    children: isScreenSharingActive ? /*#__PURE__*/_jsxDEV(StopScreenShareIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 32\n    }, this) : /*#__PURE__*/_jsxDEV(ScreenShareIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 58\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ScreenShareButton;\nexport default ScreenShareButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"ScreenShareButton\");","map":{"version":3,"names":["React","useState","IconButton","ScreenShareIcon","StopScreenShareIcon","webRTCHandler","constraints","audio","video","ScreenShareButton","localStream","screenSharingStream","setScreenSharingStream","isScreenSharingActive","handleScreenShareToggle","stream","navigator","mediaDevices","getDisplayMedia","err","console","log","switchOutgoingTracks","getTracks","forEach","t","stop","color"],"sources":["/Users/youngjun827/dev/discord-app/discord-frontend/src/Dashboard/Room/RoomButtons/ScreenShareButton.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport ScreenShareIcon from \"@mui/icons-material/ScreenShare\";\r\nimport StopScreenShareIcon from \"@mui/icons-material/StopScreenShare\";\r\nimport * as webRTCHandler from \"../../../realtimeCommunication/webRTCHandler\";\r\n\r\nconst constraints = {\r\n  audio: false,\r\n  video: true,\r\n};\r\n\r\nconst ScreenShareButton = ({\r\n  localStream,\r\n  screenSharingStream,\r\n  setScreenSharingStream,\r\n  isScreenSharingActive,\r\n}) => {\r\n  const handleScreenShareToggle = async () => {\r\n    if (!isScreenSharingActive) {\r\n      let stream = null;\r\n      try {\r\n        stream = await navigator.mediaDevices.getDisplayMedia(constraints);\r\n      } catch (err) {\r\n        console.log(\r\n          \"error occured when trying to get an access to screen share stream\"\r\n        );\r\n      }\r\n\r\n      if (stream) {\r\n        setScreenSharingStream(stream);\r\n        webRTCHandler.switchOutgoingTracks(stream);\r\n      }\r\n    } else {\r\n      webRTCHandler.switchOutgoingTracks(localStream);\r\n      screenSharingStream.getTracks().forEach((t) => t.stop());\r\n      setScreenSharingStream(null);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <IconButton onClick={handleScreenShareToggle} style={{ color: \"white\" }}>\r\n      {isScreenSharingActive ? <StopScreenShareIcon /> : <ScreenShareIcon />}\r\n    </IconButton>\r\n  );\r\n};\r\n\r\nexport default ScreenShareButton;\r\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,eAAP,MAA4B,iCAA5B;AACA,OAAOC,mBAAP,MAAgC,qCAAhC;AACA,OAAO,KAAKC,aAAZ,MAA+B,8CAA/B;;AAEA,MAAMC,WAAW,GAAG;EAClBC,KAAK,EAAE,KADW;EAElBC,KAAK,EAAE;AAFW,CAApB;;AAKA,MAAMC,iBAAiB,GAAG,QAKpB;EAAA,IALqB;IACzBC,WADyB;IAEzBC,mBAFyB;IAGzBC,sBAHyB;IAIzBC;EAJyB,CAKrB;;EACJ,MAAMC,uBAAuB,GAAG,YAAY;IAC1C,IAAI,CAACD,qBAAL,EAA4B;MAC1B,IAAIE,MAAM,GAAG,IAAb;;MACA,IAAI;QACFA,MAAM,GAAG,MAAMC,SAAS,CAACC,YAAV,CAAuBC,eAAvB,CAAuCZ,WAAvC,CAAf;MACD,CAFD,CAEE,OAAOa,GAAP,EAAY;QACZC,OAAO,CAACC,GAAR,CACE,mEADF;MAGD;;MAED,IAAIN,MAAJ,EAAY;QACVH,sBAAsB,CAACG,MAAD,CAAtB;QACAV,aAAa,CAACiB,oBAAd,CAAmCP,MAAnC;MACD;IACF,CAdD,MAcO;MACLV,aAAa,CAACiB,oBAAd,CAAmCZ,WAAnC;MACAC,mBAAmB,CAACY,SAApB,GAAgCC,OAAhC,CAAyCC,CAAD,IAAOA,CAAC,CAACC,IAAF,EAA/C;MACAd,sBAAsB,CAAC,IAAD,CAAtB;IACD;EACF,CApBD;;EAsBA,oBACE,QAAC,UAAD;IAAY,OAAO,EAAEE,uBAArB;IAA8C,KAAK,EAAE;MAAEa,KAAK,EAAE;IAAT,CAArD;IAAA,UACGd,qBAAqB,gBAAG,QAAC,mBAAD;MAAA;MAAA;MAAA;IAAA,QAAH,gBAA6B,QAAC,eAAD;MAAA;MAAA;MAAA;IAAA;EADrD;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CAjCD;;KAAMJ,iB;AAmCN,eAAeA,iBAAf"},"metadata":{},"sourceType":"module"}