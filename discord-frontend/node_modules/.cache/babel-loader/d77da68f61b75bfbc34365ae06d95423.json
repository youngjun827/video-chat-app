{"ast":null,"code":"import _objectSpread from\"/Users/youngjun827/dev/discord-app/discord-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{userRef,useEffect}from\"react\";import{styled}from\"@mui/system\";import MessagesHeader from\"./MessagesHeader\";import{connect}from\"react-redux\";import DUMMY_MESSAGES from\"./DUMMY_MESSAGES\";import Message from\"./Message\";import DateSeparator from\"./DateSeparator\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var MainContainer=styled(\"div\")({height:\"calc(100% - 60px)\",overflow:\"auto\",display:\"flex\",flexDirection:\"column\",alignItems:\"center\"});var convertDateToHumanReadable=function convertDateToHumanReadable(date,format){var map={mm:date.getMonth()+1,dd:date.getDate(),yy:date.getFullYear().toString().slice(-2),yyyy:date.getFullYear()};return format.replace(/mm|dd|yy|yyy/gi,function(matched){return map[matched];});};var Messages=function Messages(_ref){var chosenChatDetails=_ref.chosenChatDetails,messages=_ref.messages;return/*#__PURE__*/_jsxs(MainContainer,{children:[/*#__PURE__*/_jsx(MessagesHeader,{name:chosenChatDetails===null||chosenChatDetails===void 0?void 0:chosenChatDetails.name}),messages.map(function(message,index){var sameAuthor=index>0&&messages[index].author._id===messages[index-1].author._id;var sameDay=index>0&&convertDateToHumanReadable(new Date(message.date),\"dd/mm/yy\")===convertDateToHumanReadable(new Date(messages[index-1].date),\"dd/mm/yy\");return/*#__PURE__*/_jsxs(\"div\",{style:{width:\"97%\"},children:[(!sameDay||index===0)&&/*#__PURE__*/_jsx(DateSeparator,{date:convertDateToHumanReadable(new Date(message.date),\"dd/mm/yy\")}),/*#__PURE__*/_jsx(Message,{content:message.content,username:message.author.username,sameAuthor:sameAuthor,date:convertDateToHumanReadable(new Date(message.date),\"dd/mm/yy\"),sameDay:sameDay})]},message._id);})]});};var mapStoreStateToProps=function mapStoreStateToProps(_ref2){var chat=_ref2.chat;return _objectSpread({},chat);};export default connect(mapStoreStateToProps)(Messages);","map":{"version":3,"names":["React","userRef","useEffect","styled","MessagesHeader","connect","DUMMY_MESSAGES","Message","DateSeparator","MainContainer","height","overflow","display","flexDirection","alignItems","convertDateToHumanReadable","date","format","map","mm","getMonth","dd","getDate","yy","getFullYear","toString","slice","yyyy","replace","matched","Messages","chosenChatDetails","messages","name","message","index","sameAuthor","author","_id","sameDay","Date","width","content","username","mapStoreStateToProps","chat"],"sources":["/Users/youngjun827/dev/discord-app/discord-frontend/src/Dashboard/Messenger/Messages/Messages.js"],"sourcesContent":["import React, { userRef, useEffect } from \"react\";\r\nimport { styled } from \"@mui/system\";\r\nimport MessagesHeader from \"./MessagesHeader\";\r\nimport { connect } from \"react-redux\";\r\nimport DUMMY_MESSAGES from \"./DUMMY_MESSAGES\";\r\nimport Message from \"./Message\";\r\nimport DateSeparator from \"./DateSeparator\";\r\n\r\nconst MainContainer = styled(\"div\")({\r\n  height: \"calc(100% - 60px)\",\r\n  overflow: \"auto\",\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  alignItems: \"center\",\r\n});\r\n\r\nconst convertDateToHumanReadable = (date, format) => {\r\n  const map = {\r\n    mm: date.getMonth() + 1,\r\n    dd: date.getDate(),\r\n    yy: date.getFullYear().toString().slice(-2),\r\n    yyyy: date.getFullYear(),\r\n  };\r\n\r\n  return format.replace(/mm|dd|yy|yyy/gi, (matched) => map[matched]);\r\n};\r\n\r\nconst Messages = ({ chosenChatDetails, messages }) => {\r\n  return (\r\n    <MainContainer>\r\n      <MessagesHeader name={chosenChatDetails?.name} />\r\n      {messages.map((message, index) => {\r\n        const sameAuthor =\r\n          index > 0 &&\r\n          messages[index].author._id === messages[index - 1].author._id;\r\n\r\n        const sameDay =\r\n          index > 0 &&\r\n          convertDateToHumanReadable(new Date(message.date), \"dd/mm/yy\") ===\r\n            convertDateToHumanReadable(\r\n              new Date(messages[index - 1].date),\r\n              \"dd/mm/yy\"\r\n            );\r\n\r\n        return (\r\n          <div key={message._id} style={{ width: \"97%\" }}>\r\n            {(!sameDay || index === 0) && (\r\n              <DateSeparator\r\n                date={convertDateToHumanReadable(\r\n                  new Date(message.date),\r\n                  \"dd/mm/yy\"\r\n                )}\r\n              />\r\n            )}\r\n            <Message\r\n              content={message.content}\r\n              username={message.author.username}\r\n              sameAuthor={sameAuthor}\r\n              date={convertDateToHumanReadable(\r\n                new Date(message.date),\r\n                \"dd/mm/yy\"\r\n              )}\r\n              sameDay={sameDay}\r\n            />\r\n          </div>\r\n        );\r\n      })}\r\n    </MainContainer>\r\n  );\r\n};\r\n\r\nconst mapStoreStateToProps = ({ chat }) => {\r\n  return {\r\n    ...chat,\r\n  };\r\n};\r\n\r\nexport default connect(mapStoreStateToProps)(Messages);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}