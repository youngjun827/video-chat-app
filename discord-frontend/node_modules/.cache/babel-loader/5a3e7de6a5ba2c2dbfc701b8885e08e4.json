{"ast":null,"code":"import _regeneratorRuntime from\"/Users/youngjun827/dev/discord-app/discord-frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/youngjun827/dev/discord-app/discord-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import*as api from\"../../api\";import{openAlertMessage}from\"./alertActions\";export var authActions={SET_USER_DETAILS:\"AUTH.SET_USER_DETAILS\"};export var getActions=function getActions(dispatch){return{// And tadah! the login function is here.\n// 4. The login function uses the userDetails (userDetails, history) to execute Redux's dispatch method. **Please scroll the page down to view step.5\nlogin:function login(userDetails,history){return dispatch(_login(userDetails,history));},register:function register(userDetails,history){return dispatch(_register(userDetails,history));},setUserDetails:function setUserDetails(userDetails){return dispatch(_setUserDetails(userDetails));}};};var _setUserDetails=function _setUserDetails(userDetails){// 21. Here, the setUserDetails function will send the current STATE and the userDetails to the authReducer. **Please reference the \"authReducer.js\" file\nreturn{type:authActions.SET_USER_DETAILS,userDetails:userDetails};};// the login function\nvar _login=function _login(userDetails,history){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(dispatch){var response,_response$exception,_response$exception$r,_response$data,_userDetails;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return api.login(userDetails);case 2:response=_context.sent;console.log(response);// If there is an error show the Alert Messages\nif(response.error){dispatch(openAlertMessage(response===null||response===void 0?void 0:(_response$exception=response.exception)===null||_response$exception===void 0?void 0:(_response$exception$r=_response$exception.response)===null||_response$exception$r===void 0?void 0:_response$exception$r.data));}else{// 18. The updated user details from the backend server are assigned to userDetails.\n_response$data=response===null||response===void 0?void 0:response.data,_userDetails=_response$data.userDetails;//  19. then the userDetails get STORED at the localStorage of the browser. Why? Check my blog on my website about localStorage and its functionality ;)\nlocalStorage.setItem(\"user\",JSON.stringify(_userDetails));// 20. Thanks to the redux-thunk, the dispatch method can be used at the \"setUserDetails\" function to send the ACTION OBJECT to the authReducer. **Please scroll the page above to access the \"setUserDetails\" function.\ndispatch(_setUserDetails(_userDetails));// 23. The user is redirected to the dashboard.\nhistory.push(\"/dashboard\");}case 5:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();};var _register=function _register(userDetails,history){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(dispatch){var response,_response$exception2,_response$exception2$,_response$data2,_userDetails2;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return api.register(userDetails);case 2:response=_context2.sent;console.log(response);if(response.error){dispatch(openAlertMessage(response===null||response===void 0?void 0:(_response$exception2=response.exception)===null||_response$exception2===void 0?void 0:(_response$exception2$=_response$exception2.response)===null||_response$exception2$===void 0?void 0:_response$exception2$.data));}else{_response$data2=response===null||response===void 0?void 0:response.data,_userDetails2=_response$data2.userDetails;localStorage.setItem(\"user\",JSON.stringify(_userDetails2));dispatch(_setUserDetails(_userDetails2));history.push(\"/dashboard\");}case 5:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2){return _ref2.apply(this,arguments);};}();};","map":{"version":3,"names":["api","openAlertMessage","authActions","SET_USER_DETAILS","getActions","dispatch","login","userDetails","history","register","setUserDetails","type","response","console","log","error","exception","data","localStorage","setItem","JSON","stringify","push"],"sources":["/Users/youngjun827/dev/discord-app/discord-frontend/src/store/actions/authActions.js"],"sourcesContent":["import * as api from \"../../api\";\r\nimport { openAlertMessage } from \"./alertActions\";\r\n\r\nexport const authActions = {\r\n  SET_USER_DETAILS: \"AUTH.SET_USER_DETAILS\",\r\n};\r\n\r\nexport const getActions = (dispatch) => {\r\n  return {\r\n    // And tadah! the login function is here.\r\n    // 4. The login function uses the userDetails (userDetails, history) to execute Redux's dispatch method. **Please scroll the page down to view step.5\r\n    login: (userDetails, history) => dispatch(login(userDetails, history)),\r\n    register: (userDetails, history) =>\r\n      dispatch(register(userDetails, history)),\r\n    setUserDetails: (userDetails) => dispatch(setUserDetails(userDetails)),\r\n  };\r\n};\r\n\r\nconst setUserDetails = (userDetails) => {\r\n  // 21. Here, the setUserDetails function will send the current STATE and the userDetails to the authReducer. **Please reference the \"authReducer.js\" file\r\n  return {\r\n    type: authActions.SET_USER_DETAILS,\r\n    userDetails,\r\n  };\r\n};\r\n\r\n// the login function\r\nconst login = (userDetails, history) => {\r\n  return async (dispatch) => {\r\n    // 5. To execute the dispatch method, the \"userDetails\" goes through the API, and the server then the database to be VALIDATED. Until then, the login function WAIT for the API to send a response BACK to be used to \"login\" function. So let's try to navigate to our API. **Please reference \"api.js\"\r\n    const response = await api.login(userDetails);\r\n    console.log(response);\r\n    // If there is an error show the Alert Messages\r\n    if (response.error) {\r\n      dispatch(openAlertMessage(response?.exception?.response?.data));\r\n    } else {\r\n      // 18. The updated user details from the backend server are assigned to userDetails.\r\n      const { userDetails } = response?.data;\r\n      //  19. then the userDetails get STORED at the localStorage of the browser. Why? Check my blog on my website about localStorage and its functionality ;)\r\n      localStorage.setItem(\"user\", JSON.stringify(userDetails));\r\n\r\n      // 20. Thanks to the redux-thunk, the dispatch method can be used at the \"setUserDetails\" function to send the ACTION OBJECT to the authReducer. **Please scroll the page above to access the \"setUserDetails\" function.\r\n      dispatch(setUserDetails(userDetails));\r\n      // 23. The user is redirected to the dashboard.\r\n      history.push(\"/dashboard\");\r\n    }\r\n  };\r\n};\r\n\r\nconst register = (userDetails, history) => {\r\n  return async (dispatch) => {\r\n    const response = await api.register(userDetails);\r\n    console.log(response);\r\n    if (response.error) {\r\n      dispatch(openAlertMessage(response?.exception?.response?.data));\r\n    } else {\r\n      const { userDetails } = response?.data;\r\n      localStorage.setItem(\"user\", JSON.stringify(userDetails));\r\n\r\n      dispatch(setUserDetails(userDetails));\r\n      history.push(\"/dashboard\");\r\n    }\r\n  };\r\n};\r\n"],"mappings":"kSAAA,MAAO,GAAKA,IAAZ,KAAqB,WAArB,CACA,OAASC,gBAAT,KAAiC,gBAAjC,CAEA,MAAO,IAAMC,YAAW,CAAG,CACzBC,gBAAgB,CAAE,uBADO,CAApB,CAIP,MAAO,IAAMC,WAAU,CAAG,QAAbA,WAAa,CAACC,QAAD,CAAc,CACtC,MAAO,CACL;AACA;AACAC,KAAK,CAAE,eAACC,WAAD,CAAcC,OAAd,QAA0BH,SAAQ,CAACC,MAAK,CAACC,WAAD,CAAcC,OAAd,CAAN,CAAlC,EAHF,CAILC,QAAQ,CAAE,kBAACF,WAAD,CAAcC,OAAd,QACRH,SAAQ,CAACI,SAAQ,CAACF,WAAD,CAAcC,OAAd,CAAT,CADA,EAJL,CAMLE,cAAc,CAAE,wBAACH,WAAD,QAAiBF,SAAQ,CAACK,eAAc,CAACH,WAAD,CAAf,CAAzB,EANX,CAAP,CAQD,CATM,CAWP,GAAMG,gBAAc,CAAG,QAAjBA,gBAAiB,CAACH,WAAD,CAAiB,CACtC;AACA,MAAO,CACLI,IAAI,CAAET,WAAW,CAACC,gBADb,CAELI,WAAW,CAAXA,WAFK,CAAP,CAID,CAND,CAQA;AACA,GAAMD,OAAK,CAAG,QAARA,OAAQ,CAACC,WAAD,CAAcC,OAAd,CAA0B,CACtC,iGAAO,iBAAOH,QAAP,6NAEkBL,IAAG,CAACM,KAAJ,CAAUC,WAAV,CAFlB,QAECK,QAFD,eAGLC,OAAO,CAACC,GAAR,CAAYF,QAAZ,EACA;AACA,GAAIA,QAAQ,CAACG,KAAb,CAAoB,CAClBV,QAAQ,CAACJ,gBAAgB,CAACW,QAAD,SAACA,QAAD,sCAACA,QAAQ,CAAEI,SAAX,qEAAC,oBAAqBJ,QAAtB,gDAAC,sBAA+BK,IAAhC,CAAjB,CAAR,CACD,CAFD,IAEO,CACL;AADK,eAEmBL,QAFnB,SAEmBA,QAFnB,iBAEmBA,QAAQ,CAAEK,IAF7B,CAEGV,YAFH,gBAEGA,WAFH,CAGL;AACAW,YAAY,CAACC,OAAb,CAAqB,MAArB,CAA6BC,IAAI,CAACC,SAAL,CAAed,YAAf,CAA7B,EAEA;AACAF,QAAQ,CAACK,eAAc,CAACH,YAAD,CAAf,CAAR,CACA;AACAC,OAAO,CAACc,IAAR,CAAa,YAAb,EACD,CAjBI,sDAAP,+DAmBD,CApBD,CAsBA,GAAMb,UAAQ,CAAG,QAAXA,UAAW,CAACF,WAAD,CAAcC,OAAd,CAA0B,CACzC,kGAAO,kBAAOH,QAAP,qOACkBL,IAAG,CAACS,QAAJ,CAAaF,WAAb,CADlB,QACCK,QADD,gBAELC,OAAO,CAACC,GAAR,CAAYF,QAAZ,EACA,GAAIA,QAAQ,CAACG,KAAb,CAAoB,CAClBV,QAAQ,CAACJ,gBAAgB,CAACW,QAAD,SAACA,QAAD,uCAACA,QAAQ,CAAEI,SAAX,sEAAC,qBAAqBJ,QAAtB,gDAAC,sBAA+BK,IAAhC,CAAjB,CAAR,CACD,CAFD,IAEO,iBACmBL,QADnB,SACmBA,QADnB,iBACmBA,QAAQ,CAAEK,IAD7B,CACGV,aADH,iBACGA,WADH,CAELW,YAAY,CAACC,OAAb,CAAqB,MAArB,CAA6BC,IAAI,CAACC,SAAL,CAAed,aAAf,CAA7B,EAEAF,QAAQ,CAACK,eAAc,CAACH,aAAD,CAAf,CAAR,CACAC,OAAO,CAACc,IAAR,CAAa,YAAb,EACD,CAXI,wDAAP,iEAaD,CAdD"},"metadata":{},"sourceType":"module"}