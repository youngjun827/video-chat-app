{"ast":null,"code":"var _jsxFileName = \"/Users/youngjun827/dev/discord-app/discord-frontend/src/Dashboard/Messenger/Messages/Messages.js\";\nimport React, { userRef, useEffect } from \"react\";\nimport { styled } from \"@mui/system\";\nimport MessagesHeader from \"./MessagesHeader\";\nimport { connect } from \"react-redux\";\nimport DUMMY_MESSAGES from \"./DUMMY_MESSAGES\";\nimport Message from \"./Message\";\nimport DateSeparator from \"./DateSeparator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainContainer = styled(\"div\")({\n  height: \"calc(100% - 60px)\",\n  overflow: \"auto\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\"\n});\n\nconst convertDateToHumanReadable = (date, format) => {\n  const map = {\n    mm: date.getMonth() + 1,\n    dd: date.getDate(),\n    yy: date.getFullYear().toString().slice(-2),\n    yyyy: date.getFullYear()\n  };\n  return format.replace(/mm|dd|yy|yyy/gi, matched => map[matched]);\n};\n\nconst Messages = _ref => {\n  let {\n    chosenChatDetails,\n    messages\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(MainContainer, {\n    children: [/*#__PURE__*/_jsxDEV(MessagesHeader, {\n      name: chosenChatDetails === null || chosenChatDetails === void 0 ? void 0 : chosenChatDetails.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), messages.map((message, index) => {\n      const sameAuthor = index > 0 && messages[index].author._id === messages[index - 1].author._id;\n      const sameDay = index > 0 && convertDateToHumanReadable(new Date(message.date), \"dd/mm/yy\") === convertDateToHumanReadable(new Date(messages[index - 1].date), \"dd/mm/yy\");\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"97%\"\n        },\n        children: [(!sameDay || index === 0) && /*#__PURE__*/_jsxDEV(DateSeparator, {\n          date: convertDateToHumanReadable(new Date(message.date), \"dd/mm/yy\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Message, {\n          content: message.content,\n          username: message.author.username,\n          sameAuthor: sameAuthor,\n          date: convertDateToHumanReadable(new Date(message.date), \"dd/mm/yy\"),\n          sameDay: sameDay\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)]\n      }, message._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Messages;\n\nconst mapStoreStateToProps = _ref2 => {\n  let {\n    chat\n  } = _ref2;\n  return { ...chat\n  };\n};\n\nexport default connect(mapStoreStateToProps)(Messages);\n\nvar _c;\n\n$RefreshReg$(_c, \"Messages\");","map":{"version":3,"names":["React","userRef","useEffect","styled","MessagesHeader","connect","DUMMY_MESSAGES","Message","DateSeparator","MainContainer","height","overflow","display","flexDirection","alignItems","convertDateToHumanReadable","date","format","map","mm","getMonth","dd","getDate","yy","getFullYear","toString","slice","yyyy","replace","matched","Messages","chosenChatDetails","messages","name","message","index","sameAuthor","author","_id","sameDay","Date","width","content","username","mapStoreStateToProps","chat"],"sources":["/Users/youngjun827/dev/discord-app/discord-frontend/src/Dashboard/Messenger/Messages/Messages.js"],"sourcesContent":["import React, { userRef, useEffect } from \"react\";\r\nimport { styled } from \"@mui/system\";\r\nimport MessagesHeader from \"./MessagesHeader\";\r\nimport { connect } from \"react-redux\";\r\nimport DUMMY_MESSAGES from \"./DUMMY_MESSAGES\";\r\nimport Message from \"./Message\";\r\nimport DateSeparator from \"./DateSeparator\";\r\n\r\nconst MainContainer = styled(\"div\")({\r\n  height: \"calc(100% - 60px)\",\r\n  overflow: \"auto\",\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  alignItems: \"center\",\r\n});\r\n\r\nconst convertDateToHumanReadable = (date, format) => {\r\n  const map = {\r\n    mm: date.getMonth() + 1,\r\n    dd: date.getDate(),\r\n    yy: date.getFullYear().toString().slice(-2),\r\n    yyyy: date.getFullYear(),\r\n  };\r\n\r\n  return format.replace(/mm|dd|yy|yyy/gi, (matched) => map[matched]);\r\n};\r\n\r\nconst Messages = ({ chosenChatDetails, messages }) => {\r\n  return (\r\n    <MainContainer>\r\n      <MessagesHeader name={chosenChatDetails?.name} />\r\n      {messages.map((message, index) => {\r\n        const sameAuthor =\r\n          index > 0 &&\r\n          messages[index].author._id === messages[index - 1].author._id;\r\n\r\n        const sameDay =\r\n          index > 0 &&\r\n          convertDateToHumanReadable(new Date(message.date), \"dd/mm/yy\") ===\r\n            convertDateToHumanReadable(\r\n              new Date(messages[index - 1].date),\r\n              \"dd/mm/yy\"\r\n            );\r\n\r\n        return (\r\n          <div key={message._id} style={{ width: \"97%\" }}>\r\n            {(!sameDay || index === 0) && (\r\n              <DateSeparator\r\n                date={convertDateToHumanReadable(\r\n                  new Date(message.date),\r\n                  \"dd/mm/yy\"\r\n                )}\r\n              />\r\n            )}\r\n            <Message\r\n              content={message.content}\r\n              username={message.author.username}\r\n              sameAuthor={sameAuthor}\r\n              date={convertDateToHumanReadable(\r\n                new Date(message.date),\r\n                \"dd/mm/yy\"\r\n              )}\r\n              sameDay={sameDay}\r\n            />\r\n          </div>\r\n        );\r\n      })}\r\n    </MainContainer>\r\n  );\r\n};\r\n\r\nconst mapStoreStateToProps = ({ chat }) => {\r\n  return {\r\n    ...chat,\r\n  };\r\n};\r\n\r\nexport default connect(mapStoreStateToProps)(Messages);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}