{"ast":null,"code":"import { roomActions } from \"../actions/roomActions\";\nconst initState = {\n  isUserInRoom: false,\n  isUserRoomCreator: false,\n  roomDetails: null,\n  activeRooms: [],\n  localStream: null,\n  remoteStreams: [],\n  audioOnly: false,\n  screenSharingStream: null,\n  isScreenSharingActive: false,\n  isUserJoinedWithOnlyAudio: false\n};\n\nconst reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case roomActions.OPEN_ROOM:\n      return { ...state,\n        isUserInRoom: action.isUserInRoom,\n        isUserRoomCreator: action.isUserRoomCreator\n      };\n\n    case roomActions.SET_ROOM_DETAILS:\n      return { ...state,\n        roomDetails: action.roomDetails\n      };\n\n    case roomActions.SET_ACTIVE_ROOMS:\n      return { ...state,\n        activeRooms: action.activeRooms\n      };\n\n    case roomActions.SET_LOCAL_STREAM:\n      return { ...state,\n        localStream: action.localStream\n      };\n\n    case roomActions.SET_AUDIO_ONLY:\n      return { ...state,\n        audioOnly: action.audioOnly\n      };\n\n    case roomActions.SET_REMOTE_STREAMS:\n      return { ...state,\n        remoteStreams: action.remoteStreams\n      };\n\n    case roomActions.SET_SCREEN_SHARE_STREAM:\n      return { ...state,\n        screenSharingStream: action.screenSharingStream,\n        isScreenSharingActive: action.isScreenSharingActive\n      };\n\n    case roomActions.SET_IS_USER_JOINED_WITH_ONLY_AUDIO:\n      return { ...state,\n        isUserJoinedWithOnlyAudio: action.isUserJoinedWithOnlyAudio\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"names":["roomActions","initState","isUserInRoom","isUserRoomCreator","roomDetails","activeRooms","localStream","remoteStreams","audioOnly","screenSharingStream","isScreenSharingActive","isUserJoinedWithOnlyAudio","reducer","state","action","type","OPEN_ROOM","SET_ROOM_DETAILS","SET_ACTIVE_ROOMS","SET_LOCAL_STREAM","SET_AUDIO_ONLY","SET_REMOTE_STREAMS","SET_SCREEN_SHARE_STREAM","SET_IS_USER_JOINED_WITH_ONLY_AUDIO"],"sources":["/Users/youngjun827/Downloads/Video Chat App - Learn MERN Stack with WebRTC and SocketIO/[TutsNode.com] - Video Chat App - Learn MERN Stack with WebRTC and SocketIO/8. Creating Video Group Call Rooms/discord-app/discord-frontend/src/store/reducers/roomReducer.js"],"sourcesContent":["import { roomActions } from \"../actions/roomActions\";\r\n\r\nconst initState = {\r\n  isUserInRoom: false,\r\n  isUserRoomCreator: false,\r\n  roomDetails: null,\r\n  activeRooms: [],\r\n  localStream: null,\r\n  remoteStreams: [],\r\n  audioOnly: false,\r\n  screenSharingStream: null,\r\n  isScreenSharingActive: false,\r\n  isUserJoinedWithOnlyAudio: false,\r\n};\r\n\r\nconst reducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case roomActions.OPEN_ROOM:\r\n      return {\r\n        ...state,\r\n        isUserInRoom: action.isUserInRoom,\r\n        isUserRoomCreator: action.isUserRoomCreator,\r\n      };\r\n    case roomActions.SET_ROOM_DETAILS:\r\n      return {\r\n        ...state,\r\n        roomDetails: action.roomDetails,\r\n      };\r\n    case roomActions.SET_ACTIVE_ROOMS:\r\n      return {\r\n        ...state,\r\n        activeRooms: action.activeRooms,\r\n      };\r\n    case roomActions.SET_LOCAL_STREAM:\r\n      return {\r\n        ...state,\r\n        localStream: action.localStream,\r\n      };\r\n    case roomActions.SET_AUDIO_ONLY:\r\n      return {\r\n        ...state,\r\n        audioOnly: action.audioOnly,\r\n      };\r\n    case roomActions.SET_REMOTE_STREAMS:\r\n      return {\r\n        ...state,\r\n        remoteStreams: action.remoteStreams,\r\n      };\r\n    case roomActions.SET_SCREEN_SHARE_STREAM:\r\n      return {\r\n        ...state,\r\n        screenSharingStream: action.screenSharingStream,\r\n        isScreenSharingActive: action.isScreenSharingActive,\r\n      };\r\n    case roomActions.SET_IS_USER_JOINED_WITH_ONLY_AUDIO:\r\n      return {\r\n        ...state,\r\n        isUserJoinedWithOnlyAudio: action.isUserJoinedWithOnlyAudio,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,wBAA5B;AAEA,MAAMC,SAAS,GAAG;EAChBC,YAAY,EAAE,KADE;EAEhBC,iBAAiB,EAAE,KAFH;EAGhBC,WAAW,EAAE,IAHG;EAIhBC,WAAW,EAAE,EAJG;EAKhBC,WAAW,EAAE,IALG;EAMhBC,aAAa,EAAE,EANC;EAOhBC,SAAS,EAAE,KAPK;EAQhBC,mBAAmB,EAAE,IARL;EAShBC,qBAAqB,EAAE,KATP;EAUhBC,yBAAyB,EAAE;AAVX,CAAlB;;AAaA,MAAMC,OAAO,GAAG,YAA+B;EAAA,IAA9BC,KAA8B,uEAAtBZ,SAAsB;EAAA,IAAXa,MAAW;;EAC7C,QAAQA,MAAM,CAACC,IAAf;IACE,KAAKf,WAAW,CAACgB,SAAjB;MACE,OAAO,EACL,GAAGH,KADE;QAELX,YAAY,EAAEY,MAAM,CAACZ,YAFhB;QAGLC,iBAAiB,EAAEW,MAAM,CAACX;MAHrB,CAAP;;IAKF,KAAKH,WAAW,CAACiB,gBAAjB;MACE,OAAO,EACL,GAAGJ,KADE;QAELT,WAAW,EAAEU,MAAM,CAACV;MAFf,CAAP;;IAIF,KAAKJ,WAAW,CAACkB,gBAAjB;MACE,OAAO,EACL,GAAGL,KADE;QAELR,WAAW,EAAES,MAAM,CAACT;MAFf,CAAP;;IAIF,KAAKL,WAAW,CAACmB,gBAAjB;MACE,OAAO,EACL,GAAGN,KADE;QAELP,WAAW,EAAEQ,MAAM,CAACR;MAFf,CAAP;;IAIF,KAAKN,WAAW,CAACoB,cAAjB;MACE,OAAO,EACL,GAAGP,KADE;QAELL,SAAS,EAAEM,MAAM,CAACN;MAFb,CAAP;;IAIF,KAAKR,WAAW,CAACqB,kBAAjB;MACE,OAAO,EACL,GAAGR,KADE;QAELN,aAAa,EAAEO,MAAM,CAACP;MAFjB,CAAP;;IAIF,KAAKP,WAAW,CAACsB,uBAAjB;MACE,OAAO,EACL,GAAGT,KADE;QAELJ,mBAAmB,EAAEK,MAAM,CAACL,mBAFvB;QAGLC,qBAAqB,EAAEI,MAAM,CAACJ;MAHzB,CAAP;;IAKF,KAAKV,WAAW,CAACuB,kCAAjB;MACE,OAAO,EACL,GAAGV,KADE;QAELF,yBAAyB,EAAEG,MAAM,CAACH;MAF7B,CAAP;;IAIF;MACE,OAAOE,KAAP;EA5CJ;AA8CD,CA/CD;;AAiDA,eAAeD,OAAf"},"metadata":{},"sourceType":"module"}