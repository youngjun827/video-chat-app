{"ast":null,"code":"import store from \"../store/store\";\nimport { setLocalStream, setRemoteStreams } from \"../store/actions/roomActions\";\nimport Peer from \"simple-peer\";\nimport * as socketConnection from \"./socketConnection\";\n\nconst getConfiguration = () => {\n  const turnIceServers = null;\n\n  if (turnIceServers) {// TODO use TURN server credentials\n  } else {\n    console.warn(\"Using only STUN server\");\n    return {\n      iceServers: [{\n        urls: \"stun:stun.l.google.com:19302\"\n      }]\n    };\n  }\n};\n\nconst onlyAudioConstraints = {\n  audio: true,\n  video: false\n};\nconst defaultConstraints = {\n  video: true,\n  audio: true\n};\nexport const getLocalStreamPreview = function () {\n  let onlyAudio = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  let callbackFunc = arguments.length > 1 ? arguments[1] : undefined;\n  const constraints = onlyAudio ? onlyAudioConstraints : defaultConstraints;\n  navigator.mediaDevices.getUserMedia(constraints).then(stream => {\n    store.dispatch(setLocalStream(stream));\n    callbackFunc();\n  }).catch(err => {\n    console.log(err);\n    console.log(\"Cannot get an access to local stream\");\n  });\n};\nlet peers = {};\nexport const prepareNewPeerConnection = (connUserSocketId, isInitiator) => {\n  const localStream = store.getState().room.localStream;\n\n  if (isInitiator) {\n    console.log(\"preparing new peer connection as initiator\");\n  } else {\n    console.log(\"preparing new peer connection as not initiator\");\n  }\n\n  peers[connUserSocketId] = new Peer({\n    initiator: isInitiator,\n    config: getConfiguration(),\n    stream: localStream\n  });\n  peers[connUserSocketId].on(\"signal\", data => {\n    const signalData = {\n      signal: data,\n      connUserSocketId: connUserSocketId\n    };\n    socketConnection.signalPeerData(signalData);\n  });\n  peers[connUserSocketId].on(\"stream\", remoteStream => {\n    // TODO\n    // add new remote stream to our server store\n    console.log(\"remote stream came from other user\");\n    console.log(\"direct connection has been established\");\n    remoteStream.connUserSocketId = connUserSocketId;\n    addNewRemoteStream(remoteStream);\n  });\n};\nexport const handleSignalingData = data => {\n  const {\n    connUserSocketId,\n    signal\n  } = data;\n\n  if (peers[connUserSocketId]) {\n    peers[connUserSocketId].signal(signal);\n  }\n};\n\nconst addNewRemoteStream = remoteStream => {\n  const remoteStreams = store.getState().room.remoteStreams;\n  const newRemoteStreams = [...remoteStreams, remoteStream];\n  store.dispatch(setRemoteStreams(newRemoteStreams));\n};\n\nexport const closeAllConnections = () => {\n  Object.entries(peers).forEach(mappedObject => {\n    const connUserSocketId = mappedObject[0];\n\n    if (peers[connUserSocketId]) {\n      peers[connUserSocketId].destroy();\n      delete peers[connUserSocketId];\n    }\n  });\n};\nexport const handleParticipantLeftRoom = data => {\n  const {\n    connUserSocketId\n  } = data;\n\n  if (peers[connUserSocketId]) {\n    peers[connUserSocketId].destroy();\n    delete peers[connUserSocketId];\n  }\n\n  const remoteStreams = store.getState().room.remoteStreams;\n  const newRemoteStreams = remoteStreams.filter(remoteStream => remoteStream.connUserSocketId !== connUserSocketId);\n  store.dispatch(setRemoteStreams(newRemoteStreams));\n};\nexport const switchOutgoingTracks = stream => {\n  for (let socket_id in peers) {\n    for (let index in peers[socket_id].streams[0].getTracks()) {\n      for (let index2 in stream.getTracks()) {\n        if (peers[socket_id].streams[0].getTracks()[index].kind === stream.getTracks()[index2].kind) {\n          peers[socket_id].replaceTrack(peers[socket_id].streams[0].getTracks()[index], stream.getTracks()[index2], peers[socket_id].streams[0]);\n          break;\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["store","setLocalStream","setRemoteStreams","Peer","socketConnection","getConfiguration","turnIceServers","console","warn","iceServers","urls","onlyAudioConstraints","audio","video","defaultConstraints","getLocalStreamPreview","onlyAudio","callbackFunc","constraints","navigator","mediaDevices","getUserMedia","then","stream","dispatch","catch","err","log","peers","prepareNewPeerConnection","connUserSocketId","isInitiator","localStream","getState","room","initiator","config","on","data","signalData","signal","signalPeerData","remoteStream","addNewRemoteStream","handleSignalingData","remoteStreams","newRemoteStreams","closeAllConnections","Object","entries","forEach","mappedObject","destroy","handleParticipantLeftRoom","filter","switchOutgoingTracks","socket_id","index","streams","getTracks","index2","kind","replaceTrack"],"sources":["/Users/youngjun827/dev/discord-app/discord-frontend/src/realtimeCommunication/webRTCHandler.js"],"sourcesContent":["import store from \"../store/store\";\r\nimport { setLocalStream, setRemoteStreams } from \"../store/actions/roomActions\";\r\nimport Peer from \"simple-peer\";\r\nimport * as socketConnection from \"./socketConnection\";\r\n\r\nconst getConfiguration = () => {\r\n  const turnIceServers = null;\r\n\r\n  if (turnIceServers) {\r\n    // TODO use TURN server credentials\r\n  } else {\r\n    console.warn(\"Using only STUN server\");\r\n    return {\r\n      iceServers: [\r\n        {\r\n          urls: \"stun:stun.l.google.com:19302\",\r\n        },\r\n      ],\r\n    };\r\n  }\r\n};\r\n\r\nconst onlyAudioConstraints = {\r\n  audio: true,\r\n  video: false,\r\n};\r\n\r\nconst defaultConstraints = {\r\n  video: true,\r\n  audio: true,\r\n};\r\n\r\nexport const getLocalStreamPreview = (onlyAudio = false, callbackFunc) => {\r\n  const constraints = onlyAudio ? onlyAudioConstraints : defaultConstraints;\r\n\r\n  navigator.mediaDevices\r\n    .getUserMedia(constraints)\r\n    .then((stream) => {\r\n      store.dispatch(setLocalStream(stream));\r\n      callbackFunc();\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      console.log(\"Cannot get an access to local stream\");\r\n    });\r\n};\r\n\r\nlet peers = {};\r\n\r\nexport const prepareNewPeerConnection = (connUserSocketId, isInitiator) => {\r\n  const localStream = store.getState().room.localStream;\r\n\r\n  if (isInitiator) {\r\n    console.log(\"preparing new peer connection as initiator\");\r\n  } else {\r\n    console.log(\"preparing new peer connection as not initiator\");\r\n  }\r\n\r\n  peers[connUserSocketId] = new Peer({\r\n    initiator: isInitiator,\r\n    config: getConfiguration(),\r\n    stream: localStream,\r\n  });\r\n\r\n  peers[connUserSocketId].on(\"signal\", (data) => {\r\n    const signalData = {\r\n      signal: data,\r\n      connUserSocketId: connUserSocketId,\r\n    };\r\n\r\n    socketConnection.signalPeerData(signalData);\r\n  });\r\n\r\n  peers[connUserSocketId].on(\"stream\", (remoteStream) => {\r\n    // TODO\r\n    // add new remote stream to our server store\r\n    console.log(\"remote stream came from other user\");\r\n    console.log(\"direct connection has been established\");\r\n    remoteStream.connUserSocketId = connUserSocketId;\r\n    addNewRemoteStream(remoteStream);\r\n  });\r\n};\r\n\r\nexport const handleSignalingData = (data) => {\r\n  const { connUserSocketId, signal } = data;\r\n\r\n  if (peers[connUserSocketId]) {\r\n    peers[connUserSocketId].signal(signal);\r\n  }\r\n};\r\n\r\nconst addNewRemoteStream = (remoteStream) => {\r\n  const remoteStreams = store.getState().room.remoteStreams;\r\n  const newRemoteStreams = [...remoteStreams, remoteStream];\r\n\r\n  store.dispatch(setRemoteStreams(newRemoteStreams));\r\n};\r\n\r\nexport const closeAllConnections = () => {\r\n  Object.entries(peers).forEach((mappedObject) => {\r\n    const connUserSocketId = mappedObject[0];\r\n    if (peers[connUserSocketId]) {\r\n      peers[connUserSocketId].destroy();\r\n      delete peers[connUserSocketId];\r\n    }\r\n  });\r\n};\r\n\r\nexport const handleParticipantLeftRoom = (data) => {\r\n  const { connUserSocketId } = data;\r\n\r\n  if (peers[connUserSocketId]) {\r\n    peers[connUserSocketId].destroy();\r\n    delete peers[connUserSocketId];\r\n  }\r\n\r\n  const remoteStreams = store.getState().room.remoteStreams;\r\n\r\n  const newRemoteStreams = remoteStreams.filter(\r\n    (remoteStream) => remoteStream.connUserSocketId !== connUserSocketId\r\n  );\r\n\r\n  store.dispatch(setRemoteStreams(newRemoteStreams));\r\n};\r\n\r\nexport const switchOutgoingTracks = (stream) => {\r\n  for (let socket_id in peers) {\r\n    for (let index in peers[socket_id].streams[0].getTracks()) {\r\n      for (let index2 in stream.getTracks()) {\r\n        if (\r\n          peers[socket_id].streams[0].getTracks()[index].kind ===\r\n          stream.getTracks()[index2].kind\r\n        ) {\r\n          peers[socket_id].replaceTrack(\r\n            peers[socket_id].streams[0].getTracks()[index],\r\n            stream.getTracks()[index2],\r\n            peers[socket_id].streams[0]\r\n          );\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}